* {
    /* background-color: azure; */
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    font-size: 62.5%; /*10px / 16px (browser default) -> 1rem = 10px */
}

.container {
 width: 80vw;
 margin: auto;
}


h1 {
    font-weight: 400;
    font-size: 3rem;
}

body {
    font-family: 'Poppins', sans-serif;
}

.header {
    text-align: center;
}

.header_main-title {
    font-size: 6rem;
}

.game_state {
    display: grid;
    border: 1px solid black;
    border-radius: 5px;
    grid-template-columns: repeat(3, 1fr);
    grid-template-areas: "level timer points";
    justify-content: center;
}

.points,
#timer,
.level,
#level_value,
#player_points,
#time_remaining {
    font-size: 2rem;
}

.level {
    grid-area: level;
    justify-self: start;
    padding-left: 1rem;
}

#timer {
    grid-area: timer;
    margin: 0 auto;
}

.points {
    grid-area: points;
    justify-self: end;
    padding-right: 1rem;
    
}

.hidden {
    display: none;
}

.mathround_container {
    display: grid;
    justify-items: center;
    /* border: 1px solid red;
    background-color: rgba(231, 163, 163, 0.897); */
    /* border: 1px solid black; */
    height: 40vh;
    width: 80vw;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(3, 1fr);
    grid-template-areas: "header header header header header"
                         "num1 operator num2 equals num3"
                         ". . start . ."
                         ;
}

#mathround_container_header {
    padding-top: 1rem;
    grid-area: header;
    height: 10vh;
}

#num1,
#operator,
#num2,
#equals,
#num3 {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 15vh;
    width: 15vw;
    border-radius: 10px;
    font-size: 6rem;
}

#num1 {

    grid-area: num1;
    background-color: white;
}

#operator {
    grid-area: operator;
    background-color: grey;
    color: white;

}

#num2 {
    grid-area: num2;
    background-color: white;

}

#equals {
    grid-area: equals;
    /* background-color: yellow; */
    font-size: 8rem;
}

#num3 {
    grid-area: num3;
    position: relative;
}

#text_cursor {
    position: absolute;
    width: 10rem;
    height: .5rem;
    background-color: black;
    left: auto;
    top: 90%;
    animation-name: blink;
    animation-duration: 700ms;
    animation-iteration-count: infinite;
    opacity: 1;
    display: hidden;
}

#text_cursor:focus + i {
    display: none;
}

.answer {
    text-align: center;
    border: none;
    height: 14vh;
    width: 14vw;
    font-size: 6rem;
    padding-right: 20px;
    outline: none;
}

.answer:after {
    content: '';
    width: 20px;
    height: 2px;
    background: black;
    opacity: 0;
    display: inline-block;
    animation: textCursor 1s linear infinite alternate;
  }

/* REMOVES INCREMENT/DECREMENT FROM INPUT */
input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button { 
  -webkit-appearance: none; 
  margin: 0; 
}

.start_container {
    grid-area: start;
    padding-top: 5rem;
}

#start_button,
#newgame_button {
    width: 20rem;
    height: 10rem;
    font-size: 4rem;
    
}

.green_time {
    color: green;
}

.black_time {
    color: black;
}

.red_time {
    color: red;
}

@keyframes blink {
    from { opacity: .75; }
    to { opacity: 0; }
}